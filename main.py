import os
from pytube import YouTube
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters
from dotenv import load_dotenv

load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞
async def start(update: Update, context):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ YouTube-–≤–∏–¥–µ–æ –∏–ª–∏ Shorts.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Å—Å—ã–ª–∫–∞–º–∏
async def handle_message(update: Update, context):
    url = update.message.text
    if "youtube.com" in url or "youtu.be" in url:
        await update.message.reply_text("–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Å—ã–ª–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        yt = YouTube(url)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –∫–∞—á–µ—Å—Ç–≤–∞
        keyboard = []
        for stream in yt.streams.filter(progressive=True, file_extension='mp4'):
            quality = f"{stream.resolution} ({round(stream.filesize / 1024 / 1024)} MB)"
            button = InlineKeyboardButton(quality, callback_data=stream.itag)
            keyboard.append([button])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ '{yt.title}'", reply_markup=reply_markup)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ YouTube.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
async def button_click(update: Update, context):
    query = update.callback_query
    itag = int(query.data)
    await query.answer()
    
    url = query.message.reply_to_message.text
    yt = YouTube(url)
    stream = yt.streams.get_by_itag(itag)
    
    # –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    await query.edit_message_text(f"–ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ üì• ({stream.resolution})...")
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
    video_file = stream.download()
    
    # –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏
    await query.edit_message_text("–û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ üì§...")
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –≤ —á–∞—Ç
    with open(video_file, 'rb') as file:
        await context.bot.send_video(chat_id=query.message.chat_id, video=file)

    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    os.remove(video_file)

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
async def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_handler(CallbackQueryHandler(button_click))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await app.run_polling()  # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())  # –ò—Å–ø–æ–ª—å–∑—É–µ–º asyncio.run –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
